version: "3.8"

services:
  redis:
    image: alexandragugu/redis-dev:v1
    expose:
      - "6379"
    restart: always
    networks:
      - licenta-net

  keycloak-postgres-container:
    image: alexandragugu/keycloak-postgres:v1
    environment:
      POSTGRES_DB: 
      POSTGRES_USER: 
      POSTGRES_PASSWORD: 
    expose:
      - "5432"
    volumes:
      - keycloak-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - licenta-net

  keycloak-container:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: keycloak-container
    ports:
      - "8081:8080"
    command: >
      start-dev --http-relative-path=/auth --features=scripts
    depends_on:
      keycloak-postgres-container:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN: 
      KEYCLOAK_ADMIN_PASSWORD: 
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres-container:5432/keycloak
      KC_DB_USERNAME: 
      KC_DB_PASSWORD: 
      PROXY_ADDRESS_FORWARDING: "true"
      KC_HOSTNAME: localhost:8081
      KC_HTTP_PORT: 8080 
      KC_HTTP_RELATIVE_PATH: /auth
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_BACKCHANNEL: "false"
      KC_FEATURES: "scripts,upload_scripts"

    volumes:
      - ./keycloak-themes/themes:/opt/keycloak/themes
      - ./realms/realm-export.json:/opt/keycloak/data/import/realm-export.json
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/auth/realms/master"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - licenta-net

  application-db:
    image: postgres:15
    environment:
      POSTGRES_USER: 
      POSTGRES_PASSWORD: 
      POSTGRES_DB: application

    ports:
      - "5432:5432"
    volumes:
      - app-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d application"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - licenta-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "4000:3000"
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/grafana.db:/var/lib/grafana/grafana.db
    user: "472:472" 
    restart: unless-stopped
    networks:
      - licenta-net

  minio:
    image: alexandragugu/minio-custom:v1
    command: server --address ":9000" --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER:
      MINIO_ROOT_PASSWORD: 
      MINIO_SERVER_URL: http://localhost:9000
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    volumes:
      - ./minio-data:/data
    restart: unless-stopped
    networks:
      - licenta-net

  frontend:
    build: ./frontend
    ports:
      - "443:443"
    restart: unless-stopped
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs/localhost.pem:/etc/ssl/certs/localhost.pem
      - ./certs/localhost-key.pem:/etc/ssl/private/localhost-key.pem
    networks:
      - licenta-net

  backend:
    container_name: backend
    build: ./backend
    ports:
    - "8080:8080"
    depends_on:
      - application-db
      - keycloak-container
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_HOST: application-db
      DB_PORT: 5432
      DB_NAME: application
      DB_USER: postgres
      DB_PASS: postgres
    restart: unless-stopped
    networks:
      - licenta-net

volumes:
  keycloak-db:
  app-db:
  minio-data:
  grafana-data:

networks:
  licenta-net:
    name: licenta-net
    driver: bridge
